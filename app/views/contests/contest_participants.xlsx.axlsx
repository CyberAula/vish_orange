#Config
xlsx_package.use_autowidth = false

#Init
wb = xlsx_package.workbook

#Style
header_style = wb.styles.add_style :bg_color => "CCC",
:b => true,
:border => { :style => :thin, :color => "00" },
:alignment => { :horizontal => :center, :vertical => :center, :wrap_text => false}

odd_row_style = wb.styles.add_style :bg_color => "FFF",
:border => { :style => :thin, :color => "00" },
:alignment => { :horizontal => :center, :vertical => :center , :wrap_text => false}

even_row_style = wb.styles.add_style :bg_color => "FFF",
:border => { :style => :thin, :color => "00" },
:alignment => { :horizontal => :center, :vertical => :center , :wrap_text => false}

#WorkSheet content

wb.add_worksheet(:name => "Contest_" + @contest.name + "_participants") do |sheet|

	rowContents = [];
	contest_data = []
	if @contest.has_additional_fields?
		contest_data = @contest.additional_fields
	end	
	rowContents[0] = ["name", "surname", "email"] + contest_data

	columnLength = 3 + contest_data.length
	rowContentsIndex = 1

	@contest_enrolled.each do |key|
		other_data_parsed = JSON.parse(key.settings)["additional_fields"]
		other_data = contest_data.map{|od| other_data_parsed[od]}
		
		rowContents[rowContentsIndex] = [key.actor.name, "", key.actor.email] + other_data
		rowContentsIndex = rowContentsIndex + 1
	end

	rowContents.each_with_index do |rowContent,index|
		style = odd_row_style
		if index==0
			style = header_style
		elsif index%2==0
			style = even_row_style
		end
		sheet.add_row(rowContent, :style => style)
	end

	#Automatically set the column width to fit content
	#It seems that xlsx_package.use_autowidth = true is not working very well...

	columnContents = []
	columnLength.times do |i|
		columnContents[i] = []
	end

	rowContents.each_with_index do |rowContent,index|
		rowContent.each_with_index do |value,cIndex|
			if columnContents[cIndex]
				columnContents[cIndex] << value
			end
		end
	end

	columnWidths = []
	columnContents.each_with_index do |columnContent,index|
		columnContent.each do |content|
			unless content.nil?
				if columnWidths[index].nil?
					columnWidths[index] = content.to_s.length + 5
				else
					columnWidths[index] = [columnWidths[index],content.to_s.length + 5].max
				end
			end
		end		
	end

	#Filter extreme wider columns
	columnWidths.each_with_index do |columnWidth,index|
		columnWidths[index] = [columnWidth,125].min
	end

	sheet.column_info.each_with_index do |cInfo,index|
		sheet.column_info[index].width = columnWidths[index]
	end
end
